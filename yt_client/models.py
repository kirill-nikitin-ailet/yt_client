# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2021-11-22T10:49:47+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field


class ActivityCategory(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ActivityItem(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class AgileStatus(BaseModel):
    valid: Optional[bool] = None
    hasJobs: Optional[bool] = None
    errors: Optional[str] = None
    warnings: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class BackupError(BaseModel):
    date: Optional[int] = None
    errorMessage: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class BackupFile(BaseModel):
    name: Optional[str] = None
    size: Optional[int] = None
    creationDate: Optional[int] = None
    link: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class BackupStatus(BaseModel):
    backupInProgress: Optional[bool] = None
    backupCancelled: Optional[bool] = None
    backupError: Optional[BackupError] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Bundle(BaseModel):
    isUpdateable: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ColorCoding(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CommandVisibility(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CreatedDeletedActivityItem(ActivityItem):
    pass


class DatabaseAttributeValue(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ArchiveFormat(Enum):
    TAR_GZ = 'TAR_GZ'
    ZIP = 'ZIP'


class DateFormatDescriptor(BaseModel):
    presentation: Optional[str] = None
    pattern: Optional[str] = None
    datePattern: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class DurationValue(BaseModel):
    minutes: Optional[int] = None
    presentation: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class MailProtocol(Enum):
    SMTP = 'SMTP'
    SMTPS = 'SMTPS'
    SMTP_TLS = 'SMTP_TLS'


class ExternalIssue(BaseModel):
    name: Optional[str] = None
    url: Optional[str] = None
    key: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class FieldStyle(BaseModel):
    background: Optional[str] = None
    foreground: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class FieldType(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class FilterField(BaseModel):
    name: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueCustomField(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueFolder(BaseModel):
    name: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Direction(Enum):
    OUTWARD = 'OUTWARD'
    INWARD = 'INWARD'
    BOTH = 'BOTH'


class IssueLinkType(BaseModel):
    name: Optional[str] = None
    localizedName: Optional[str] = None
    sourceToTarget: Optional[str] = None
    localizedSourceToTarget: Optional[str] = None
    targetToSource: Optional[str] = None
    localizedTargetToSource: Optional[str] = None
    directed: Optional[bool] = None
    aggregation: Optional[bool] = None
    readOnly: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class JabberSettings(BaseModel):
    isEnabled: Optional[bool] = None
    host: Optional[str] = None
    port: Optional[int] = None
    login: Optional[str] = None
    serviceName: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class License(BaseModel):
    username: Optional[str] = None
    license: Optional[str] = None
    error: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class LocaleDescriptor(BaseModel):
    locale: Optional[str] = None
    language: Optional[str] = None
    community: Optional[bool] = None
    name: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class LocaleSettings(BaseModel):
    locale: Optional[LocaleDescriptor] = None
    isRTL: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Logo(BaseModel):
    url: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class MultiValueActivityItem(ActivityItem):
    pass


class NotificationsUserProfile(BaseModel):
    notifyOnOwnChanges: Optional[bool] = None
    jabberNotificationsEnabled: Optional[bool] = None
    emailNotificationsEnabled: Optional[bool] = None
    mentionNotificationsEnabled: Optional[bool] = None
    duplicateClusterNotificationsEnabled: Optional[bool] = None
    mailboxIntegrationNotificationsEnabled: Optional[bool] = None
    usePlainTextEmails: Optional[bool] = None
    autoWatchOnComment: Optional[bool] = None
    autoWatchOnCreate: Optional[bool] = None
    autoWatchOnVote: Optional[bool] = None
    autoWatchOnUpdate: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class OnlineUsers(BaseModel):
    users: Optional[int] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ParsedCommand(BaseModel):
    description: Optional[str] = None
    error: Optional[bool] = None
    delete: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class PeriodFieldFormat(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class PeriodValue(BaseModel):
    minutes: Optional[int] = None
    presentation: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class PredefinedFilterField(FilterField):
    pass


class RestCorsSettings(BaseModel):
    allowedOrigins: Optional[str] = None
    allowAllOrigins: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SingleValueActivityItem(ActivityItem):
    pass


class StorageEntry(BaseModel):
    name: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Suggestion(BaseModel):
    completionStart: Optional[int] = None
    completionEnd: Optional[int] = None
    matchingStart: Optional[int] = None
    matchingEnd: Optional[int] = None
    caret: Optional[int] = None
    description: Optional[str] = None
    option: Optional[str] = None
    prefix: Optional[str] = None
    suffix: Optional[str] = None
    group: Optional[str] = None
    icon: Optional[str] = None
    auxiliaryIcon: Optional[str] = None
    className: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SwimlaneEntityAttributeValue(DatabaseAttributeValue):
    name: Optional[str] = None
    isResolved: Optional[bool] = None


class SwimlaneSettings(BaseModel):
    enabled: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SwimlaneValue(BaseModel):
    name: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SystemSettings(BaseModel):
    baseUrl: Optional[str] = None
    maxUploadFileSize: Optional[int] = None
    maxExportItems: Optional[int] = None
    administratorEmail: Optional[str] = None
    allowStatisticsCollection: Optional[bool] = None
    isApplicationReadOnly: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Telemetry(BaseModel):
    installationFolder: Optional[str] = None
    databaseLocation: Optional[str] = None
    logsLocation: Optional[str] = None
    availableProcessors: Optional[int] = None
    availableMemory: Optional[str] = None
    allocatedMemory: Optional[str] = None
    usedMemory: Optional[str] = None
    uptime: Optional[str] = None
    startedTime: Optional[int] = None
    databaseBackgroundThreads: Optional[int] = None
    pendingAsyncJobs: Optional[int] = None
    cachedResultsCountInDBQueriesCache: Optional[int] = None
    databaseQueriesCacheHitRate: Optional[str] = None
    blobStringsCacheHitRate: Optional[str] = None
    totalTransactions: Optional[int] = None
    transactionsPerSecond: Optional[str] = None
    requestsPerSecond: Optional[str] = None
    databaseSize: Optional[str] = None
    fullDatabaseSize: Optional[str] = None
    textIndexSize: Optional[str] = None
    onlineUsers: Optional[OnlineUsers] = None
    reportCalculatorThreads: Optional[int] = None
    notificationAnalyzerThreads: Optional[int] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class TextFieldValue(BaseModel):
    text: Optional[str] = None
    markdownText: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class TextIssueCustomField(IssueCustomField):
    value: Optional[TextFieldValue] = None


class TimeTrackingUserProfile(BaseModel):
    periodFormat: Optional[PeriodFieldFormat] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class TimeZoneDescriptor(BaseModel):
    presentation: Optional[str] = None
    offset: Optional[int] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class Visibility(BaseModel):
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class VisibilityActivityItem(MultiValueActivityItem):
    targetMember: Optional[str] = None


class WorkItemType(BaseModel):
    name: Optional[str] = None
    autoAttached: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class WorkTimeSettings(BaseModel):
    minutesADay: Optional[int] = None
    workDays: Optional[int] = None
    firstDayOfWeek: Optional[int] = None
    daysAWeek: Optional[int] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ActivityCursorPage(BaseModel):
    reverse: Optional[bool] = None
    beforeCursor: Optional[str] = None
    afterCursor: Optional[str] = None
    hasBefore: Optional[bool] = None
    hasAfter: Optional[bool] = None
    activities: Optional[List[ActivityItem]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class AgileColumnFieldValue(DatabaseAttributeValue):
    name: Optional[str] = None
    isResolved: Optional[bool] = None


class AppearanceSettings(BaseModel):
    timeZone: Optional[TimeZoneDescriptor] = None
    dateFieldFormat: Optional[DateFormatDescriptor] = None
    logo: Optional[Logo] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class AttributeBasedSwimlaneSettings(SwimlaneSettings):
    field: Optional[FilterField] = None
    values: Optional[List[SwimlaneEntityAttributeValue]] = None


class BaseBundle(Bundle):
    pass


class BundleElement(BaseModel):
    name: Optional[str] = None
    bundle: Optional[Bundle] = None
    description: Optional[str] = None
    ordinal: Optional[int] = None
    color: Optional[FieldStyle] = None
    hasRunningJob: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CommandUnlimitedVisibility(CommandVisibility):
    pass


class EmailSettings(BaseModel):
    isEnabled: Optional[bool] = None
    host: Optional[str] = None
    port: Optional[int] = None
    mailProtocol: Optional[MailProtocol] = None
    anonymous: Optional[bool] = None
    login: Optional[str] = None
    sslKey: Optional[StorageEntry] = None
    from_: Optional[str] = Field(None, alias='from')
    replyTo: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class GeneralUserProfile(BaseModel):
    dateFieldFormat: Optional[DateFormatDescriptor] = None
    timezone: Optional[TimeZoneDescriptor] = None
    locale: Optional[LocaleDescriptor] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class GlobalTimeTrackingSettings(BaseModel):
    workItemTypes: Optional[List[WorkItemType]] = None
    workTimeSettings: Optional[WorkTimeSettings] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueBasedSwimlaneSettings(SwimlaneSettings):
    field: Optional[FilterField] = None
    defaultCardType: Optional[SwimlaneValue] = None
    values: Optional[List[SwimlaneValue]] = None


class LocalizableBundleElement(BundleElement):
    localizedName: Optional[str] = None


class NotificationSettings(BaseModel):
    emailSettings: Optional[EmailSettings] = None
    jabberSettings: Optional[JabberSettings] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class PeriodIssueCustomField(IssueCustomField):
    value: Optional[PeriodValue] = None


class SimpleValueActivityItem(SingleValueActivityItem):
    removed: Optional[Dict[str, Any]] = None
    added: Optional[Dict[str, Any]] = None


class StateBundleElement(LocalizableBundleElement):
    isResolved: Optional[bool] = None


class TextMarkupActivityItem(SimpleValueActivityItem):
    removed: Optional[str] = None
    added: Optional[str] = None
    markup: Optional[str] = None


class UnlimitedVisibility(Visibility):
    pass


class UserProfiles(BaseModel):
    general: Optional[GeneralUserProfile] = None
    notifications: Optional[NotificationsUserProfile] = None
    timetracking: Optional[TimeTrackingUserProfile] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class UsesMarkupActivityItem(SimpleValueActivityItem):
    removed: Optional[bool] = None
    added: Optional[bool] = None
    markup: Optional[str] = None


class VersionBundleElement(BundleElement):
    archived: Optional[bool] = None
    releaseDate: Optional[int] = None
    released: Optional[bool] = None


class BuildBundleElement(BundleElement):
    assembleDate: Optional[int] = None


class EnumBundleElement(LocalizableBundleElement):
    pass


class GlobalSettings(BaseModel):
    systemSettings: Optional[SystemSettings] = None
    notificationSettings: Optional[NotificationSettings] = None
    restSettings: Optional[RestCorsSettings] = None
    appearanceSettings: Optional[AppearanceSettings] = None
    localeSettings: Optional[LocaleSettings] = None
    license: Optional[License] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueResolvedActivityItem(SimpleValueActivityItem):
    removed: Optional[int] = None
    added: Optional[int] = None


class StateBundle(BaseBundle):
    values: Optional[List[StateBundleElement]] = None


class VersionBundle(BaseBundle):
    values: Optional[List[VersionBundleElement]] = None


class BuildBundle(BaseBundle):
    values: Optional[List[BuildBundleElement]] = None


class EnumBundle(BaseBundle):
    values: Optional[List[EnumBundleElement]] = None


class Agile(BaseModel):
    name: Optional[str] = None
    owner: Optional[User] = None
    visibleFor: Optional[UserGroup] = None
    visibleForProjectBased: Optional[bool] = None
    updateableBy: Optional[UserGroup] = None
    updateableByProjectBased: Optional[bool] = None
    orphansAtTheTop: Optional[bool] = None
    hideOrphansSwimlane: Optional[bool] = None
    estimationField: Optional[CustomField] = None
    originalEstimationField: Optional[CustomField] = None
    projects: Optional[List[Project]] = None
    sprints: Optional[List[Sprint]] = None
    currentSprint: Optional[Sprint] = None
    columnSettings: Optional[ColumnSettings] = None
    swimlaneSettings: Optional[SwimlaneSettings] = None
    sprintsSettings: Optional[SprintsSettings] = None
    colorCoding: Optional[ColorCoding] = None
    status: Optional[AgileStatus] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class AgileColumn(BaseModel):
    presentation: Optional[str] = None
    isResolved: Optional[bool] = None
    ordinal: Optional[int] = None
    parent: Optional[ColumnSettings] = None
    wipLimit: Optional[WIPLimit] = None
    fieldValues: Optional[List[AgileColumnFieldValue]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class AttachmentActivityItem(CreatedDeletedActivityItem):
    target: Optional[IssueAttachment] = None
    removed: Optional[List[IssueAttachment]] = None
    added: Optional[List[IssueAttachment]] = None


class ColumnSettings(BaseModel):
    field: Optional[CustomField] = None
    columns: Optional[List[AgileColumn]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CommandLimitedVisibility(CommandVisibility):
    permittedGroups: Optional[List[UserGroup]] = None
    permittedUsers: Optional[List[User]] = None


class CommandList(BaseModel):
    comment: Optional[str] = None
    visibility: Optional[CommandVisibility] = None
    query: Optional[str] = None
    caret: Optional[int] = None
    silent: Optional[bool] = None
    usesMarkdown: Optional[bool] = None
    runAs: Optional[str] = None
    commands: Optional[List[ParsedCommand]] = None
    issues: Optional[List[Issue]] = None
    suggestions: Optional[List[Suggestion]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CommentActivityItem(CreatedDeletedActivityItem):
    target: Optional[IssueComment] = None
    removed: Optional[List[IssueComment]] = None
    added: Optional[List[IssueComment]] = None
    authorGroup: Optional[UserGroup] = None


class CommentAttachmentsActivityItem(MultiValueActivityItem):
    target: Optional[IssueComment] = None
    removed: Optional[List[IssueAttachment]] = None
    added: Optional[List[IssueAttachment]] = None


class CustomField(BaseModel):
    name: Optional[str] = None
    localizedName: Optional[str] = None
    fieldType: Optional[FieldType] = None
    isAutoAttached: Optional[bool] = None
    isDisplayedInIssueList: Optional[bool] = None
    ordinal: Optional[int] = None
    aliases: Optional[str] = None
    fieldDefaults: Optional[CustomFieldDefaults] = None
    hasRunningJob: Optional[bool] = None
    isUpdateable: Optional[bool] = None
    instances: Optional[List[ProjectCustomField]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CustomFieldActivityItem(ActivityItem):
    target: Optional[Issue] = None
    removed: Optional[Dict[str, Any]] = None
    added: Optional[Dict[str, Any]] = None


class CustomFieldDefaults(BaseModel):
    canBeEmpty: Optional[bool] = None
    emptyFieldText: Optional[str] = None
    isPublic: Optional[bool] = None
    parent: Optional[CustomField] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class CustomFilterField(FilterField):
    customField: Optional[CustomField] = None


class DatabaseBackupSettings(BaseModel):
    location: Optional[str] = None
    filesToKeep: Optional[int] = None
    cronExpression: Optional[str] = None
    archiveFormat: Optional[ArchiveFormat] = None
    isOn: Optional[bool] = None
    availableDiskSpace: Optional[int] = None
    notifiedUsers: Optional[List[User]] = None
    backupStatus: Optional[BackupStatus] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class DuplicateVote(BaseModel):
    issue: Optional[Issue] = None
    user: Optional[User] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class FieldBasedColorCoding(ColorCoding):
    prototype: Optional[CustomField] = None


class Issue(BaseModel):
    idReadable: Optional[str] = None
    created: Optional[int] = None
    updated: Optional[int] = None
    resolved: Optional[int] = None
    numberInProject: Optional[int] = None
    project: Optional[Project] = None
    summary: Optional[str] = None
    description: Optional[str] = None
    usesMarkdown: Optional[bool] = None
    wikifiedDescription: Optional[str] = None
    reporter: Optional[User] = None
    updater: Optional[User] = None
    draftOwner: Optional[User] = None
    isDraft: Optional[bool] = None
    visibility: Optional[Visibility] = None
    votes: Optional[int] = None
    comments: Optional[List[IssueComment]] = None
    commentsCount: Optional[int] = None
    tags: Optional[List[IssueTag]] = None
    links: Optional[List[IssueLink]] = None
    externalIssue: Optional[ExternalIssue] = None
    customFields: Optional[List[IssueCustomField]] = None
    voters: Optional[IssueVoters] = None
    watchers: Optional[IssueWatchers] = None
    attachments: Optional[List[IssueAttachment]] = None
    subtasks: Optional[IssueLink] = None
    parent: Optional[IssueLink] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueAttachment(BaseModel):
    name: Optional[str] = None
    author: Optional[User] = None
    created: Optional[int] = None
    updated: Optional[int] = None
    size: Optional[int] = None
    extension: Optional[str] = None
    charset: Optional[str] = None
    mimeType: Optional[str] = None
    metaData: Optional[str] = None
    draft: Optional[bool] = None
    removed: Optional[bool] = None
    base64Content: Optional[str] = None
    url: Optional[str] = None
    visibility: Optional[Visibility] = None
    issue: Optional[Issue] = None
    comment: Optional[IssueComment] = None
    thumbnailURL: Optional[str] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueComment(BaseModel):
    text: Optional[str] = None
    usesMarkdown: Optional[bool] = None
    textPreview: Optional[str] = None
    created: Optional[int] = None
    updated: Optional[int] = None
    author: Optional[User] = None
    issue: Optional[Issue] = None
    attachments: Optional[List[IssueAttachment]] = None
    visibility: Optional[Visibility] = None
    deleted: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueCreatedActivityItem(CreatedDeletedActivityItem):
    target: Optional[Issue] = None
    removed: Optional[List[Issue]] = None
    added: Optional[List[Issue]] = None


class IssueLink(BaseModel):
    direction: Optional[Direction] = None
    linkType: Optional[IssueLinkType] = None
    issues: Optional[List[Issue]] = None
    trimmedIssues: Optional[List[Issue]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueTimeTracker(BaseModel):
    workItems: Optional[List[IssueWorkItem]] = None
    enabled: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueVoters(BaseModel):
    hasVote: Optional[bool] = None
    original: Optional[List[User]] = None
    duplicate: Optional[List[DuplicateVote]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueWatcher(BaseModel):
    user: Optional[User] = None
    issue: Optional[Issue] = None
    isStarred: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueWatchers(BaseModel):
    hasStar: Optional[bool] = None
    issueWatchers: Optional[List[IssueWatcher]] = None
    duplicateWatchers: Optional[List[IssueWatcher]] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class IssueWorkItem(BaseModel):
    author: Optional[User] = None
    creator: Optional[User] = None
    text: Optional[str] = None
    textPreview: Optional[str] = None
    type: Optional[WorkItemType] = None
    created: Optional[int] = None
    updated: Optional[int] = None
    duration: Optional[DurationValue] = None
    date: Optional[int] = None
    issue: Optional[Issue] = None
    usesMarkdown: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class LimitedVisibility(Visibility):
    permittedGroups: Optional[List[UserGroup]] = None
    permittedUsers: Optional[List[User]] = None


class LinksActivityItem(MultiValueActivityItem):
    target: Optional[Issue] = None
    removed: Optional[List[Issue]] = None
    added: Optional[List[Issue]] = None


class DatabaseMultiValueIssueCustomField(IssueCustomField):
    projectCustomField: Optional[ProjectCustomField] = None
    value: Optional[Dict[str, Any]] = None


class OwnedBundle(BaseBundle):
    values: Optional[List[OwnedBundleElement]] = None


class OwnedBundleElement(BundleElement):
    owner: Optional[User] = None


class Project(IssueFolder):
    startingNumber: Optional[int] = None
    shortName: Optional[str] = None
    description: Optional[str] = None
    leader: Optional[User] = None
    createdBy: Optional[User] = None
    issues: Optional[List[Issue]] = None
    customFields: Optional[Dict[str, Any]] = None
    archived: Optional[bool] = None
    fromEmail: Optional[str] = None
    replyToEmail: Optional[str] = None
    template: Optional[bool] = None
    iconUrl: Optional[str] = None
    team: Optional[UserGroup] = None


class ProjectActivityItem(SingleValueActivityItem):
    target: Optional[Issue] = None
    removed: Optional[Dict[str, Any]] = None
    added: Optional[Dict[str, Any]] = None


class ProjectBasedColorCoding(ColorCoding):
    projectColors: Optional[List[ProjectColor]] = None


class ProjectColor(BaseModel):
    project: Optional[Project] = None
    color: Optional[FieldStyle] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ProjectCustomField(BaseModel):
    field: Optional[CustomField] = None
    project: Optional[Project] = None
    canBeEmpty: Optional[bool] = None
    emptyFieldText: Optional[str] = None
    ordinal: Optional[int] = None
    isPublic: Optional[bool] = None
    hasRunningJob: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class ProjectTimeTrackingSettings(BaseModel):
    enabled: Optional[bool] = None
    estimate: Optional[ProjectCustomField] = None
    timeSpent: Optional[ProjectCustomField] = None
    workItemTypes: Optional[List[WorkItemType]] = None
    project: Optional[Project] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SimpleIssueCustomField(IssueCustomField):
    projectCustomField: Optional[ProjectCustomField] = None
    value: Optional[Dict[str, Any]] = None


class DatabaseSingleValueIssueCustomField(IssueCustomField):
    projectCustomField: Optional[ProjectCustomField] = None
    value: Optional[Dict[str, Any]] = None


class Sprint(BaseModel):
    agile: Optional[Agile] = None
    name: Optional[str] = None
    goal: Optional[str] = None
    start: Optional[int] = None
    finish: Optional[int] = None
    archived: Optional[bool] = None
    isDefault: Optional[bool] = None
    issues: Optional[List[Issue]] = None
    unresolvedIssuesCount: Optional[int] = None
    previousSprint: Optional[Sprint] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class SprintActivityItem(MultiValueActivityItem):
    target: Optional[Issue] = None
    removed: Optional[List[Sprint]] = None
    added: Optional[List[Sprint]] = None


class SprintsSettings(BaseModel):
    isExplicit: Optional[bool] = None
    cardOnSeveralSprints: Optional[bool] = None
    defaultSprint: Optional[Sprint] = None
    disableSprints: Optional[bool] = None
    explicitQuery: Optional[str] = None
    sprintSyncField: Optional[CustomField] = None
    hideSubtasksOfCards: Optional[bool] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class TagsActivityItem(MultiValueActivityItem):
    target: Optional[Issue] = None
    removed: Optional[List[IssueTag]] = None
    added: Optional[List[IssueTag]] = None


class User(BaseModel):
    login: Optional[str] = None
    fullName: Optional[str] = None
    email: Optional[str] = None
    jabberAccountName: Optional[str] = None
    ringId: Optional[str] = None
    guest: Optional[bool] = None
    online: Optional[bool] = None
    banned: Optional[bool] = None
    tags: Optional[List[IssueTag]] = None
    savedQueries: Optional[List[SavedQuery]] = None
    avatarUrl: Optional[str] = None
    profiles: Optional[UserProfiles] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class UserBundle(Bundle):
    groups: Optional[List[UserGroup]] = None
    individuals: Optional[List[User]] = None
    aggregatedUsers: Optional[List[User]] = None


class UserGroup(BaseModel):
    name: Optional[str] = None
    ringId: Optional[str] = None
    usersCount: Optional[int] = None
    icon: Optional[str] = None
    allUsersGroup: Optional[bool] = None
    teamForProject: Optional[Project] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class VcsChangeActivityItem(CreatedDeletedActivityItem):
    removed: Optional[Dict[str, Any]] = None
    added: Optional[Dict[str, Any]] = None
    author: Optional[User] = None


class VisibilityGroupActivityItem(VisibilityActivityItem):
    targetMember: Optional[str] = None
    targetSubMember: Optional[str] = None
    removed: Optional[List[UserGroup]] = None
    added: Optional[List[UserGroup]] = None


class VisibilityUserActivityItem(VisibilityActivityItem):
    targetMember: Optional[str] = None
    targetSubMember: Optional[str] = None
    removed: Optional[List[User]] = None
    added: Optional[List[User]] = None


class VotersActivityItem(MultiValueActivityItem):
    target: Optional[Issue] = None
    removed: Optional[List[User]] = None
    added: Optional[List[User]] = None


class WIPLimit(BaseModel):
    max: Optional[int] = None
    min: Optional[int] = None
    column: Optional[AgileColumn] = None
    id: Optional[str] = None
    _type: Optional[str] = Field(None, alias='$type')


class WatchFolder(IssueFolder):
    owner: Optional[User] = None
    visibleFor: Optional[UserGroup] = None
    updateableBy: Optional[UserGroup] = None


class WorkItemActivityItem(CreatedDeletedActivityItem):
    target: Optional[IssueWorkItem] = None
    removed: Optional[List[IssueWorkItem]] = None
    added: Optional[List[IssueWorkItem]] = None


class WorkItemAuthorActivityItem(SingleValueActivityItem):
    target: Optional[IssueWorkItem] = None
    removed: Optional[User] = None
    added: Optional[User] = None


class WorkItemDurationActivityItem(SingleValueActivityItem):
    target: Optional[IssueWorkItem] = None
    removed: Optional[DurationValue] = None
    added: Optional[DurationValue] = None


class WorkItemTypeActivityItem(MultiValueActivityItem):
    target: Optional[IssueWorkItem] = None
    removed: Optional[List[WorkItemType]] = None
    added: Optional[List[WorkItemType]] = None


class TextCustomFieldActivityItem(CustomFieldActivityItem):
    target: Optional[Issue] = None
    removed: Optional[str] = None
    added: Optional[str] = None
    markup: Optional[str] = None


class BundleCustomFieldDefaults(CustomFieldDefaults):
    pass


class UserCustomFieldDefaults(CustomFieldDefaults):
    bundle: Optional[UserBundle] = None
    defaultValues: Optional[List[User]] = None


class MultiBuildIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[BuildBundleElement] = None


class MultiEnumIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[EnumBundleElement] = None


class MultiGroupIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[UserGroup] = None


class MultiOwnedIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[OwnedBundleElement] = None


class MultiUserIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[User] = None


class MultiVersionIssueCustomField(DatabaseMultiValueIssueCustomField):
    value: Optional[VersionBundleElement] = None


class BundleProjectCustomField(ProjectCustomField):
    pass


class GroupProjectCustomField(ProjectCustomField):
    defaultValues: Optional[List[UserGroup]] = None


class PeriodProjectCustomField(ProjectCustomField):
    pass


class SimpleProjectCustomField(ProjectCustomField):
    pass


class DateIssueCustomField(SimpleIssueCustomField):
    value: Optional[Dict[str, Any]] = None


class SingleBuildIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[BuildBundleElement] = None


class SingleEnumIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[EnumBundleElement] = None


class SingleGroupIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[UserGroup] = None


class SingleOwnedIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[OwnedBundleElement] = None


class SingleUserIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[User] = None


class SingleVersionIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[VersionBundleElement] = None


class StateIssueCustomField(DatabaseSingleValueIssueCustomField):
    value: Optional[StateBundleElement] = None


class Me(User):
    pass


class VcsUnresolvedUser(User):
    name: Optional[str] = None


class IssueTag(WatchFolder):
    issues: Optional[List[Issue]] = None
    color: Optional[FieldStyle] = None
    untagOnResolve: Optional[bool] = None


class SavedQuery(WatchFolder):
    query: Optional[str] = None
    issues: Optional[List[Issue]] = None


class BuildBundleCustomFieldDefaults(BundleCustomFieldDefaults):
    bundle: Optional[BuildBundle] = None
    defaultValues: Optional[List[BuildBundleElement]] = None


class EnumBundleCustomFieldDefaults(BundleCustomFieldDefaults):
    bundle: Optional[EnumBundle] = None
    defaultValues: Optional[List[EnumBundleElement]] = None


class OwnedBundleCustomFieldDefaults(BundleCustomFieldDefaults):
    bundle: Optional[OwnedBundle] = None
    defaultValues: Optional[List[OwnedBundleElement]] = None


class StateBundleCustomFieldDefaults(BundleCustomFieldDefaults):
    bundle: Optional[StateBundle] = None
    defaultValues: Optional[List[StateBundleElement]] = None


class VersionBundleCustomFieldDefaults(BundleCustomFieldDefaults):
    bundle: Optional[VersionBundle] = None
    defaultValues: Optional[List[VersionBundleElement]] = None


class BuildProjectCustomField(BundleProjectCustomField):
    bundle: Optional[BuildBundle] = None
    defaultValues: Optional[List[BuildBundleElement]] = None


class EnumProjectCustomField(BundleProjectCustomField):
    bundle: Optional[EnumBundle] = None
    defaultValues: Optional[List[EnumBundleElement]] = None


class OwnedProjectCustomField(BundleProjectCustomField):
    bundle: Optional[OwnedBundle] = None
    defaultValues: Optional[List[OwnedBundleElement]] = None


class StateProjectCustomField(BundleProjectCustomField):
    bundle: Optional[StateBundle] = None
    defaultValues: Optional[List[StateBundleElement]] = None


class UserProjectCustomField(BundleProjectCustomField):
    bundle: Optional[UserBundle] = None
    defaultValues: Optional[List[User]] = None


class VersionProjectCustomField(BundleProjectCustomField):
    bundle: Optional[VersionBundle] = None
    defaultValues: Optional[List[VersionBundleElement]] = None


class TextProjectCustomField(SimpleProjectCustomField):
    pass


Agile.update_forward_refs()
AgileColumn.update_forward_refs()
AttachmentActivityItem.update_forward_refs()
ColumnSettings.update_forward_refs()
CommandLimitedVisibility.update_forward_refs()
CommandList.update_forward_refs()
CommentActivityItem.update_forward_refs()
CommentAttachmentsActivityItem.update_forward_refs()
CustomField.update_forward_refs()
CustomFieldActivityItem.update_forward_refs()
DatabaseBackupSettings.update_forward_refs()
DuplicateVote.update_forward_refs()
Issue.update_forward_refs()
IssueAttachment.update_forward_refs()
IssueComment.update_forward_refs()
IssueTimeTracker.update_forward_refs()
IssueVoters.update_forward_refs()
IssueWatcher.update_forward_refs()
IssueWorkItem.update_forward_refs()
LimitedVisibility.update_forward_refs()
DatabaseMultiValueIssueCustomField.update_forward_refs()
OwnedBundle.update_forward_refs()
OwnedBundleElement.update_forward_refs()
Project.update_forward_refs()
ProjectBasedColorCoding.update_forward_refs()
TagsActivityItem.update_forward_refs()
User.update_forward_refs()
UserBundle.update_forward_refs()
